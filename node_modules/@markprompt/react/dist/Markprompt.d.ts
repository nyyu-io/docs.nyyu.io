import { type JSXElementConstructor } from 'react';
import * as BaseMarkprompt from './primitives/headless.js';
import { type MarkpromptOptions, type View } from './types.js';
type MarkpromptProps = MarkpromptOptions & Omit<BaseMarkprompt.RootProps, 'activeView' | 'open' | 'onOpenChange' | 'promptOptions' | 'searchOptions'> & {
    projectKey: string;
    onDidRequestOpenChange?: (open: boolean) => void;
};
/**
 * Open Markprompt programmatically. Useful for building a custom trigger
 * or opening the Markprompt dialog in response to other user actions.
 */
declare function openMarkprompt(view?: View): void;
/**
 * Close Markprompt programmatically. Useful for building a custom trigger
 * or closing the Markprompt dialog in response to other user actions.
 */
declare function closeMarkprompt(): void;
type TriggerProps = Pick<MarkpromptProps, 'display' | 'trigger' | 'children'> & {
    hasMenu?: boolean;
    onClick?: () => void;
    Component: string | JSXElementConstructor<any>;
};
declare function Trigger(props: TriggerProps): JSX.Element;
declare function Markprompt(props: MarkpromptProps): JSX.Element;
export { closeMarkprompt, Markprompt, openMarkprompt, type MarkpromptProps, Trigger, };
//# sourceMappingURL=Markprompt.d.ts.map