import { submitFeedback as submitFeedbackCore, submitCSAT as submitCSATCore, } from '@markprompt/core';
import { useCallback } from 'react';
import { useAbortController } from '../useAbortController.js';
export function useFeedback({ feedbackOptions, projectKey, apiUrl, }) {
    if (!projectKey) {
        throw new Error(`Markprompt: a project key is required. Make sure to pass your Markprompt project key to useFeedback.`);
    }
    const { ref: controllerRef, abort } = useAbortController();
    const submitFeedback = useCallback(async (feedback, messageId) => {
        abort();
        // we need to be able to associate the feedback to a prompt
        if (!messageId)
            return;
        const controller = new AbortController();
        controllerRef.current = controller;
        const promise = submitFeedbackCore({ feedback, messageId }, projectKey, {
            ...feedbackOptions,
            signal: controller.signal,
            apiUrl,
        });
        promise.catch(() => {
            // ignore submitFeedback errors
        });
        promise.finally(() => {
            if (controllerRef.current === controller) {
                controllerRef.current = undefined;
            }
        });
    }, [abort, controllerRef, projectKey, feedbackOptions, apiUrl]);
    const submitThreadCSAT = useCallback(async (threadId, csat) => {
        abort();
        const controller = new AbortController();
        controllerRef.current = controller;
        const promise = submitCSATCore({ threadId, csat }, projectKey, {
            ...feedbackOptions,
            apiUrl,
            signal: controller.signal,
        });
        promise.catch(() => {
            // ignore submitFeedback errors
        });
        promise.finally(() => {
            if (controllerRef.current === controller) {
                controllerRef.current = undefined;
            }
        });
    }, [abort, controllerRef, projectKey, feedbackOptions]);
    return { submitFeedback, submitThreadCSAT, abort };
}
//# sourceMappingURL=useFeedback.js.map