import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { selectProjectThreads, useChatStore } from './store.js';
import { CounterClockwiseClockIcon, PlusIcon } from '../icons.js';
import { Select } from '../primitives/Select.js';
export function ThreadSelect({ disabled, }) {
    const threads = useChatStore(selectProjectThreads);
    const selectThread = useChatStore((state) => state.selectThread);
    return (_jsx(Select, { className: "MarkpromptThreadSelect", label: "Select previous thread", disabled: disabled, toggle: _jsx(CounterClockwiseClockIcon, { "aria-hidden": true, focusable: false, className: 'MarkpromptSearchIcon' }), items: [
            ...threads.map(([threadId, { messages }]) => ({
                value: threadId,
                label: messages[0]?.content ?? '',
            })),
            {
                value: 'new',
                label: 'Start new chat',
                children: (_jsxs("span", { className: "MarkpromptNewChatOption", children: [_jsx(PlusIcon, { className: "MarkpromptNewChatIcon", "aria-hidden": true, focusable: false }), ' ', "New chat"] })),
            },
        ], itemToString: (item) => item?.value ?? '', itemToChildren: (item) => {
            if ('children' in item)
                return item.children;
            return item.label;
        }, onSelectedItemChange: ({ selectedItem }) => {
            selectThread(selectedItem.value === 'new' ? undefined : selectedItem.value);
        } }));
}
//# sourceMappingURL=ThreadSelect.js.map