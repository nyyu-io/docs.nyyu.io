import type { FileSectionReference } from '@markprompt/core';
import { type ReactElement, type ComponentType } from 'react';
import type { ChatLoadingState } from '../index.js';
interface ReferenceProps {
    getHref?: (reference: FileSectionReference) => string | undefined;
    getLabel?: (reference: FileSectionReference) => string | undefined;
    reference: FileSectionReference;
    index: number;
    transformReferenceId?: (referenceId: string) => {
        href: string;
        text: string;
    };
    onDidSelectReference?: () => void;
    linkAs?: string | ComponentType<any>;
}
export declare const Reference: (props: ReferenceProps) => ReactElement;
interface ReferencesProps {
    loadingText?: string;
    heading?: string;
    getHref?: (reference: FileSectionReference) => string | undefined;
    getLabel?: (reference: FileSectionReference) => string | undefined;
    transformReferenceId?: (referenceId: string) => {
        href: string;
        text: string;
    };
    onDidSelectReference?: () => void;
    references: FileSectionReference[];
    state: ChatLoadingState;
    linkAs?: string | ComponentType<any>;
}
declare const References: (props: ReferencesProps) => ReactElement | null;
export { References };
//# sourceMappingURL=References.d.ts.map