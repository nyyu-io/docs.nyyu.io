import { type SubmitFeedbackOptions } from '@markprompt/core';
import type { ComponentType } from 'react';
import { type UserConfigurableOptions } from './store.js';
import type { ChatOptions, FeedbackOptions, IntegrationsOptions, MarkpromptOptions, ReferencesOptions, View } from '../types.js';
export interface ChatViewProps {
    /**
     * The project key associated to the project.
     */
    projectKey: string;
    /**
     * The base API URL.
     */
    apiUrl?: string;
    /**
     * The active view.
     */
    activeView?: View;
    /**
     * Options for the chat component.
     */
    chatOptions?: UserConfigurableOptions & ChatOptions;
    /**
     * Options for the feedback component.
     */
    feedbackOptions?: SubmitFeedbackOptions & FeedbackOptions;
    /**
     * Options for the references component.
     */
    referencesOptions?: ReferencesOptions;
    /**
     * Options for the integrations.
     */
    integrations?: IntegrationsOptions;
    /**
     * Show back button.
     * @default true
     */
    showBack?: boolean;
    /**
     * Handler when back button is pressed.
     */
    onDidPressBack?: () => void;
    /**
     * Handler when a ticket is created.
     */
    handleCreateTicket?: () => void;
    /**
     * Component to use in place of <a>.
     * @default "a"
     */
    linkAs?: string | ComponentType<any>;
    /**
     * Minimum number of rows.
     * @default 1
     */
    minInputRows?: number;
    /**
     * Submit on enter.
     * @default true
     */
    submitOnEnter?: boolean;
    /**
     * Show the Markprompt footer.
     **/
    branding?: {
        show?: boolean;
        type?: 'plain' | 'text';
    };
    /**
     * The way to display the chat/search content.
     * @default "dialog"
     **/
    display?: MarkpromptOptions['display'];
    /**
     * Display debug info.
     * @default false
     **/
    debug?: boolean;
}
export declare function ChatView(props: ChatViewProps): JSX.Element;
//# sourceMappingURL=ChatView.d.ts.map