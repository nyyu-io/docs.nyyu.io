import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/* eslint-disable @typescript-eslint/no-explicit-any */
import {} from 'react';
import { Answer } from './Answer.js';
import {} from './store.js';
function LoadingDots() {
    return (_jsxs("div", { className: "MarkpromptLoadingDots", children: [_jsx("span", {}), _jsx("span", {}), _jsx("span", {})] }));
}
export function MessageAnswer(props) {
    const { children, state } = props;
    return (_jsxs("div", { className: "MarkpromptMessageAnswer", children: [(state === 'indeterminate' || state === 'preload') && (_jsx("div", { className: "MarkpromptLoadingContainer", children: _jsx(LoadingDots, {}) })), _jsx(Answer, { answer: children, state: state, linkAs: props.linkAs }), state === 'cancelled' && (_jsx("div", { className: "MarkpromptCancelled", children: _jsx("div", { className: "MarkpromptCancelledText", children: "This chat response was cancelled. Please try regenerating the answer or ask another question." }) }))] }));
}
//# sourceMappingURL=MessageAnswer.js.map