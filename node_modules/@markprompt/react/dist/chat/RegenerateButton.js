import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { useCallback } from 'react';
import { ReloadIcon, StopIcon } from '../icons.js';
export function RegenerateButton(props) {
    const { abortSubmitChat, lastMessageState, regenerateLastAnswer } = props;
    const handleClick = useCallback(() => {
        if (lastMessageState === 'done' || lastMessageState === 'cancelled') {
            regenerateLastAnswer();
        }
        else {
            abortSubmitChat?.();
        }
    }, [lastMessageState, regenerateLastAnswer, abortSubmitChat]);
    return (_jsxs("button", { className: "MarkpromptRegenerateButton", type: "button", onClick: handleClick, children: [(lastMessageState === 'done' || lastMessageState === 'cancelled') && (_jsxs(_Fragment, { children: [_jsx(ReloadIcon, { className: "MarkpromptSearchIcon" }), " Regenerate"] })), (lastMessageState === 'preload' ||
                lastMessageState === 'streaming-answer') && (_jsxs(_Fragment, { children: [_jsx(StopIcon, { className: "MarkpromptSearchIcon" }), " Stop generating"] }))] }));
}
//# sourceMappingURL=RegenerateButton.js.map