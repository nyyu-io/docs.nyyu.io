import type { ChatCompletion, ChatCompletionChunk, ChatCompletionMessage, ChatCompletionMessageToolCall, ChatCompletionMetadata, FileSectionReference, NoStreamingData } from './types.js';
export type { ChatCompletion, ChatCompletionChunk, ChatCompletionMessage, ChatCompletionMessageToolCall, } from 'openai/resources/index.mjs';
export declare const getErrorMessage: (res: Response) => Promise<string>;
export declare const parseEncodedJSONHeader: (response: Response, name: string) => unknown | undefined;
export declare function isAbortError(err: unknown): err is DOMException;
export declare function isFileSectionReferences(data: unknown): data is FileSectionReference[];
export declare function isMarkpromptMetadata(json: unknown): json is ChatCompletionMetadata;
export declare function isChatCompletion(json: unknown): json is ChatCompletion;
export declare const isChatCompletionMessage: (obj: unknown) => obj is ChatCompletionMessage;
export declare const isToolCall: (tool_call: unknown) => tool_call is ChatCompletionMessageToolCall;
export declare const isToolCalls: (tool_calls: unknown) => tool_calls is ChatCompletionMessageToolCall[];
export declare const isChatCompletionChunk: (json: unknown) => json is ChatCompletionChunk;
export declare const isKeyOf: <T extends object>(obj: T, key: PropertyKey) => key is keyof T;
export declare const isNoStreamingData: (data: unknown) => data is NoStreamingData;
//# sourceMappingURL=utils.d.ts.map