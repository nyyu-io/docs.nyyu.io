"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[5768],{2632:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>o,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var s=i(4848),n=i(8453);const l={},a=void 0,r={id:"api/User Tier/User Tier Suammary",title:"User Tier Suammary",description:"Types",source:"@site/docs/api/User Tier/User Tier Suammary.md",sourceDirName:"api/User Tier",slug:"/api/User Tier/User Tier Suammary",permalink:"/docs/api/User Tier/User Tier Suammary",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/User Tier/User Tier Suammary.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Update User Tier",permalink:"/docs/api/User Tier/Update User Tier"},next:{title:"Approve Fiat Withdrawal Request",permalink:"/docs/api/Withdraw/Approve Fiat Withdrawal Request"}},d={},c=[{value:"Types",id:"types",level:2},{value:"Tier",id:"tier",level:3},{value:"Fields",id:"fields",level:4},{value:"WalletTask",id:"wallettask",level:3},{value:"Fields",id:"fields-1",level:4},{value:"WalletTaskInput",id:"wallettaskinput",level:3},{value:"Fields",id:"fields-2",level:4},{value:"StakeTask",id:"staketask",level:3},{value:"Fields",id:"fields-3",level:4},{value:"StakeTaskInput",id:"staketaskinput",level:3},{value:"Fields",id:"fields-4",level:4},{value:"TaskSetting",id:"tasksetting",level:3},{value:"Fields",id:"fields-5",level:4},{value:"TaskSettingInput",id:"tasksettinginput",level:3},{value:"Fields",id:"fields-6",level:4}];function h(e){const t={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"types",children:"Types"}),"\n",(0,s.jsx)(t.h3,{id:"tier",children:"Tier"}),"\n",(0,s.jsx)(t.p,{children:"Represents a user tier level."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-graphql",children:"type Tier {\n  level: Int!,\n  name: String,\n  point: Float,\n  svg: String\n}\n"})}),"\n",(0,s.jsx)(t.h4,{id:"fields",children:"Fields"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"level"})," (Int): Unique value to identify the tier level."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"name"})," (String): The name of the user tier, for example, Bronze, Diamond."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"point"})," (Float): The points required to reach that tier level."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"svg"})," (String): The content of the tier SVG."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"wallettask",children:"WalletTask"}),"\n",(0,s.jsx)(t.p,{children:"Represents a task related to the wallet."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-graphql",children:"type WalletTask {\n  amount: Int!,\n  point: Float!\n}\n"})}),"\n",(0,s.jsx)(t.h4,{id:"fields-1",children:"Fields"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"amount"})," (Int): The amount associated with the wallet task."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"point"})," (Float): The points awarded for completing the wallet task."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"wallettaskinput",children:"WalletTaskInput"}),"\n",(0,s.jsx)(t.p,{children:"Input type for wallet tasks."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-graphql",children:"input WalletTaskInput {\n  amount: Int!,\n  point: Float!\n}\n"})}),"\n",(0,s.jsx)(t.h4,{id:"fields-2",children:"Fields"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"amount"})," (Int): The amount associated with the wallet task."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"point"})," (Float): The points awarded for completing the wallet task."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"staketask",children:"StakeTask"}),"\n",(0,s.jsx)(t.p,{children:"Represents a task related to staking."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-graphql",children:"type StakeTask {\n  expiredTime: Int!,\n  ratio: Float!\n}\n"})}),"\n",(0,s.jsx)(t.h4,{id:"fields-3",children:"Fields"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"expiredTime"})," (Int): The time after which the staking task expires."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"ratio"})," (Float): The ratio associated with the staking task."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"staketaskinput",children:"StakeTaskInput"}),"\n",(0,s.jsx)(t.p,{children:"Input type for staking tasks."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-graphql",children:"input StakeTaskInput {\n  expiredTime: Int!,\n  ratio: Float!\n}\n"})}),"\n",(0,s.jsx)(t.h4,{id:"fields-4",children:"Fields"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"expiredTime"})," (Int): The time after which the staking task expires."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"ratio"})," (Float): The ratio associated with the staking task."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"tasksetting",children:"TaskSetting"}),"\n",(0,s.jsx)(t.p,{children:"Represents the settings for various tasks."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-graphql",children:"type TaskSetting {\n  id: Int!,\n  verification: Float,\n  wallet: [WalletTask],\n  auction: Float,\n  direct: Float,\n  staking: [StakeTask]\n}\n"})}),"\n",(0,s.jsx)(t.h4,{id:"fields-5",children:"Fields"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"id"})," (Int): The ID of the task setting."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"verification"})," (Float): The verification points associated with the task setting."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"wallet"})," ([WalletTask]): A list of wallet tasks associated with the task setting."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"auction"})," (Float): The auction points associated with the task setting."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"direct"})," (Float): The direct points associated with the task setting."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"staking"})," ([StakeTask]): A list of staking tasks associated with the task setting."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"tasksettinginput",children:"TaskSettingInput"}),"\n",(0,s.jsx)(t.p,{children:"Input type for task settings."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-graphql",children:"input TaskSettingInput {\n  verification: Float!,\n  wallet: [WalletTaskInput]!,\n  auction: Float!,\n  direct: Float!,\n  staking: [StakeTaskInput]!\n}\n"})}),"\n",(0,s.jsx)(t.h4,{id:"fields-6",children:"Fields"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"verification"})," (Float): The verification points associated with the task setting."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"wallet"})," ([WalletTaskInput]): A list of wallet tasks associated with the task setting."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"auction"})," (Float): The auction points associated with the task setting."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"direct"})," (Float): The direct points associated with the task setting."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"staking"})," ([StakeTaskInput]): A list of staking tasks associated with the task setting."]}),"\n"]})]})}function o(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>r});var s=i(6540);const n={},l=s.createContext(n);function a(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);