"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[4309],{9799:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var a=n(4848),r=n(8453);const i={},s=void 0,d={id:"api/withdraw/Fiat Withdrawal Request",title:"Fiat Withdrawal Request",description:"The bankWithdrawRequest mutation allows a user to request a withdrawal of assets via bank transfer. This mutation sends a request to the admin to process the withdrawal. It does not create a real payout request but is used to notify the admin of the user's withdrawal request.",source:"@site/docs/api/withdraw/Fiat Withdrawal Request.md",sourceDirName:"api/withdraw",slug:"/api/withdraw/Fiat Withdrawal Request",permalink:"/docs/api/withdraw/Fiat Withdrawal Request",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/withdraw/Fiat Withdrawal Request.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Deny Bank Withdrawal Request",permalink:"/docs/api/withdraw/Deny Bank Withdrawal Request"},next:{title:"Generate Withdraw Code",permalink:"/docs/api/withdraw/Generate Withdraw Code"}},o={},c=[{value:"Mutation: <code>bankWithdrawRequest</code>",id:"mutation-bankwithdrawrequest",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3},{value:"Note",id:"note",level:3}];function h(e){const t={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"bankWithdrawRequest"})," mutation allows a user to request a withdrawal of assets via bank transfer. This mutation sends a request to the admin to process the withdrawal. It does not create a real payout request but is used to notify the admin of the user's withdrawal request."]}),"\n",(0,a.jsxs)(t.h3,{id:"mutation-bankwithdrawrequest",children:["Mutation: ",(0,a.jsx)(t.code,{children:"bankWithdrawRequest"})]}),"\n",(0,a.jsx)(t.h4,{id:"schema",children:"Schema:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:"bankWithdrawRequest(\n  targetCurrency: String!,\n  amount: Float!,\n  sourceToken: String!,\n  mode: Int!,\n  country: String!,\n  holderName: String!,\n  bankName: String!,\n  accNumber: String!,\n  metadata: String!,\n  address: String!,\n  postCode: String!,\n  code: String!\n): BankWithdrawRequest\n"})}),"\n",(0,a.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"targetCurrency"})," (String): The currency to receive. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"amount"})," (Float): The amount to withdraw. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"sourceToken"})," (String): The currency type to withdraw. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"mode"})," (Int): The mode of transfer. Possible values:","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"1"}),": International"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"2"}),": Domestic"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"country"})," (String): The country of the bank. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"holderName"})," (String): The holder name of the bank account. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"bankName"})," (String): The name of the bank. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"accNumber"})," (String): The account number. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"metadata"})," (String): Metadata for sending funds via bank. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"address"})," (String): The address of the receiver. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"postCode"})," (String): The postal address. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"code"})," (String): The verification code received from the email. This field is mandatory."]}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"return",children:"Return"}),"\n",(0,a.jsxs)(t.p,{children:["The mutation returns a ",(0,a.jsx)(t.code,{children:"BankWithdrawRequest"})," object representing the withdrawal request."]}),"\n",(0,a.jsx)(t.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,a.jsxs)(t.p,{children:["The following is an example of how to use the ",(0,a.jsx)(t.code,{children:"bankWithdrawRequest"})," mutation to request a withdrawal via bank transfer:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:'mutation {\n  bankWithdrawRequest(\n    targetCurrency: "USD",\n    amount: 1000.0,\n    sourceToken: "BTC",\n    mode: 1,\n    country: "USA",\n    holderName: "John Doe",\n    bankName: "Bank of America",\n    accNumber: "123456789",\n    metadata: "For payment of services",\n    address: "123 Main St, Anytown, USA",\n    postCode: "12345",\n    code: "123456"\n  ) {\n    id,\n    userId,\n    targetCurrency,\n    amount,\n    sourceToken,\n    mode,\n    country,\n    holderName,\n    bankName,\n    accNumber,\n    metadata,\n    address,\n    postCode,\n    status,\n    createdAt,\n    updatedAt\n  }\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"note",children:"Note"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"This mutation generates a request for the admin to process the withdrawal. It does not create a real payout request."}),"\n",(0,a.jsxs)(t.li,{children:["The ",(0,a.jsx)(t.code,{children:"code"})," parameter is the verification code that the user received via email."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["In this example, the mutation requests a bank withdrawal of 1000 USD from the user's BTC wallet, sending the request to the admin for processing. The return value includes the details of the ",(0,a.jsx)(t.code,{children:"BankWithdrawRequest"}),"."]})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>d});var a=n(6540);const r={},i=a.createContext(r);function s(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);