"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[1057],{2667:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(4848),o=n(8453);const a={},i=void 0,s={id:"api/Deposit/Create Crypto Payment for Deposit Into the Wallet",title:"Create Crypto Payment for Deposit Into the Wallet",description:"The createChargeForDeposit mutation allows a user to create a cryptocurrency payment for a deposit into their wallet. It returns a deposit transaction with a deposit address.",source:"@site/docs/api/Deposit/Create Crypto Payment for Deposit Into the Wallet.md",sourceDirName:"api/Deposit",slug:"/api/Deposit/Create Crypto Payment for Deposit Into the Wallet",permalink:"/docs/api/Deposit/Create Crypto Payment for Deposit Into the Wallet",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/Deposit/Create Crypto Payment for Deposit Into the Wallet.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Create Bank Deposit Request",permalink:"/docs/api/Deposit/Create Bank Deposit Request"},next:{title:"Create PayPal Payment for Deposit Into the Wallet",permalink:"/docs/api/Deposit/Create PayPal Payment for Deposit Into the Wallet"}},c={},d=[{value:"Mutation: <code>createChargeForDeposit</code>",id:"mutation-createchargefordeposit",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3},{value:"Return",id:"return-1",level:3}];function l(e){const t={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"createChargeForDeposit"})," mutation allows a user to create a cryptocurrency payment for a deposit into their wallet. It returns a deposit transaction with a deposit address."]}),"\n",(0,r.jsxs)(t.h3,{id:"mutation-createchargefordeposit",children:["Mutation: ",(0,r.jsx)(t.code,{children:"createChargeForDeposit"})]}),"\n",(0,r.jsx)(t.h4,{id:"schema",children:"Schema:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-graphql",children:"createChargeForDeposit(\n  coin: String!,\n  network: String!,\n  cryptoType: String!\n): CoinpaymentDepositTransaction\n"})}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"coin"})," (String): The currency to make the deposit (e.g., from Coinpayment). This field is mandatory."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"network"})," (String): The type of network (e.g., ERC20, BEP20, SOL). This field is mandatory."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"cryptoType"})," (String): The type of cryptocurrency. This field is mandatory."]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"return",children:"Return"}),"\n",(0,r.jsxs)(t.p,{children:["The mutation returns a ",(0,r.jsx)(t.code,{children:"CoinpaymentDepositTransaction"})," object, which includes the deposit address and other transaction details."]}),"\n",(0,r.jsx)(t.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,r.jsxs)(t.p,{children:["The following is an example of how to use the ",(0,r.jsx)(t.code,{children:"createChargeForDeposit"})," mutation to create a cryptocurrency payment for a deposit into the wallet:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-graphql",children:'mutation {\n  createChargeForDeposit(\n    coin: "BTC",\n    network: "Bitcoin",\n    cryptoType: "Bitcoin"\n  ) {\n    txnId,\n    userId,\n    coin,\n    network,\n    cryptoType,\n    depositAddress,\n    status,\n    createdAt,\n    updatedAt\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"return-1",children:"Return"}),"\n",(0,r.jsxs)(t.p,{children:["The example returns the ",(0,r.jsx)(t.code,{children:"CoinpaymentDepositTransaction"})," object with details such as ",(0,r.jsx)(t.code,{children:"txnId"}),", ",(0,r.jsx)(t.code,{children:"userId"}),", ",(0,r.jsx)(t.code,{children:"coin"}),", ",(0,r.jsx)(t.code,{children:"network"}),", ",(0,r.jsx)(t.code,{children:"cryptoType"}),", ",(0,r.jsx)(t.code,{children:"depositAddress"}),", ",(0,r.jsx)(t.code,{children:"status"}),", ",(0,r.jsx)(t.code,{children:"createdAt"}),", and ",(0,r.jsx)(t.code,{children:"updatedAt"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["In this example, the mutation initiates a cryptocurrency payment for a deposit using Bitcoin on the Bitcoin network. The return value includes the ",(0,r.jsx)(t.code,{children:"CoinpaymentDepositTransaction"})," details such as the deposit address and transaction status."]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var r=n(6540);const o={},a=r.createContext(o);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);