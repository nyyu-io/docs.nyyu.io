"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[703],{3114:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=n(4848),r=n(8453);const a={},o=void 0,s={id:"api/deposit/Create Stripe payment with Saved Card for Deposit",title:"Create Stripe payment with Saved Card for Deposit",description:"The stripeForDepositWithSavedCard mutation allows a user to create a Stripe payment for a deposit into their wallet using a saved card.",source:"@site/docs/api/deposit/Create Stripe payment with Saved Card for Deposit.md",sourceDirName:"api/deposit",slug:"/api/deposit/Create Stripe payment with Saved Card for Deposit",permalink:"/docs/api/deposit/Create Stripe payment with Saved Card for Deposit",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/deposit/Create Stripe payment with Saved Card for Deposit.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Create Stripe Payment for Deposit Into the Wallet",permalink:"/docs/api/deposit/Create Stripe Payment for Deposit Into the Wallet"},next:{title:"Viewing Deposit Transactions",permalink:"/docs/api/deposit/Viewing Deposit Transactions"}},d={},c=[{value:"Mutation: <code>stripeForDepositWithSavedCard</code>",id:"mutation-stripefordepositwithsavedcard",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3},{value:"Return",id:"return-1",level:3}];function p(e){const t={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"stripeForDepositWithSavedCard"})," mutation allows a user to create a Stripe payment for a deposit into their wallet using a saved card."]}),"\n",(0,i.jsxs)(t.h3,{id:"mutation-stripefordepositwithsavedcard",children:["Mutation: ",(0,i.jsx)(t.code,{children:"stripeForDepositWithSavedCard"})]}),"\n",(0,i.jsx)(t.h4,{id:"schema",children:"Schema:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"stripeForDepositWithSavedCard(\n  amount: Float!,\n  fiatAmount: Float!,\n  fiatType: String!,\n  cryptoType: String!,\n  cardId: Int!,\n  paymentIntentId: String!\n): PayResponse\n"})}),"\n",(0,i.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"amount"})," (Float): The amount to deposit in USD. This field is mandatory."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"fiatAmount"})," (Float): The amount in the paid currency. This field is mandatory."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"fiatType"})," (String): The type of currency to pay in. This field is mandatory."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"cryptoType"})," (String): The type of cryptocurrency (e.g., USDT) as a default value (currently not functional). This field is mandatory."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"cardId"})," (Int): The ID of the saved card to use for the payment. This field is mandatory."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"paymentIntentId"})," (String): The payment intent ID from Stripe. This field is mandatory."]}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"return",children:"Return"}),"\n",(0,i.jsxs)(t.p,{children:["The mutation returns a ",(0,i.jsx)(t.code,{children:"PayResponse"})," object, which includes details needed to complete the Stripe payment."]}),"\n",(0,i.jsx)(t.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,i.jsxs)(t.p,{children:["The following is an example of how to use the ",(0,i.jsx)(t.code,{children:"stripeForDepositWithSavedCard"})," mutation to create a Stripe payment for a deposit into the wallet using a saved card:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:'mutation {\n  stripeForDepositWithSavedCard(\n    amount: 100.0,\n    fiatAmount: 100.0,\n    fiatType: "USD",\n    cryptoType: "USDT",\n    cardId: 456,\n    paymentIntentId: "pi_1Fxxxxx"\n  ) {\n    clientSecret,\n    paymentIntentId,\n    requiresAction,\n    error\n  }\n}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"return-1",children:"Return"}),"\n",(0,i.jsxs)(t.p,{children:["The example returns the ",(0,i.jsx)(t.code,{children:"PayResponse"})," object with details such as ",(0,i.jsx)(t.code,{children:"clientSecret"}),", ",(0,i.jsx)(t.code,{children:"paymentIntentId"}),", ",(0,i.jsx)(t.code,{children:"requiresAction"}),", and ",(0,i.jsx)(t.code,{children:"error"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["In this example, the mutation initiates a Stripe payment for a deposit of ",(0,i.jsx)(t.code,{children:"100.0"})," USD. The ",(0,i.jsx)(t.code,{children:"cardId"})," is used to specify the saved card, and the ",(0,i.jsx)(t.code,{children:"paymentIntentId"})," is obtained from Stripe. The return value includes the ",(0,i.jsx)(t.code,{children:"PayResponse"})," details needed to complete the Stripe payment."]})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var i=n(6540);const r={},a=i.createContext(r);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);