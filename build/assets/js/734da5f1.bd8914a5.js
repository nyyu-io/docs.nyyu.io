"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[3424],{7921:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=t(4848),o=t(8453);const r={},s=void 0,a={id:"api/deposit/Confirm Bank Deposit by Admin",title:"Confirm Bank Deposit by Admin",description:"The functions described is accessible only to users with ADMIN privileges.",source:"@site/docs/api/deposit/Confirm Bank Deposit by Admin.md",sourceDirName:"api/deposit",slug:"/api/deposit/Confirm Bank Deposit by Admin",permalink:"/docs/api/deposit/Confirm Bank Deposit by Admin",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/deposit/Confirm Bank Deposit by Admin.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Change Show Status",permalink:"/docs/api/deposit/Change Show Status"},next:{title:"Confirm PayPal Checkout Order",permalink:"/docs/api/deposit/Confirm PayPal Checkout Order"}},c={},d=[{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3},{value:"Return",id:"return-1",level:3}];function l(e){const n={admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The functions described is accessible only to users with ADMIN privileges."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markdown",children:"## Confirm Bank Deposit by Admin (Admin Role)\n\nThe `confirmBankDeposit` mutation allows an admin to confirm a bank deposit transaction. This involves verifying the deposit details and updating the transaction status.\n\n### Mutation: `confirmBankDeposit`\n\n#### Schema:\n```graphql\nconfirmBankDeposit(\n  id: Int!,\n  currencyCode: String!,\n  amount: Float!,\n  cryptoType: String!,\n  code: String!\n): BankDepositTransaction\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (Int): The ID of the bank deposit transaction to confirm. This field is mandatory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"currencyCode"})," (String): The currency that the user paid in. This field is mandatory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"amount"})," (Float): The amount to be paid. This field is mandatory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cryptoType"})," (String): The type of cryptocurrency (e.g., USDT) as a default value (currently not functional). This field is mandatory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"code"})," (String): The admin SMS verification code. This field is mandatory."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"return",children:"Return"}),"\n",(0,i.jsxs)(n.p,{children:["The mutation returns a ",(0,i.jsx)(n.code,{children:"BankDepositTransaction"})," object representing the confirmed bank deposit transaction."]}),"\n",(0,i.jsx)(n.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,i.jsxs)(n.p,{children:["The following is an example of how to use the ",(0,i.jsx)(n.code,{children:"confirmBankDeposit"})," mutation to confirm a bank deposit transaction:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:'mutation {\n  confirmBankDeposit(\n    id: 123,\n    currencyCode: "USD",\n    amount: 1000.0,\n    cryptoType: "USDT",\n    code: "123456"\n  ) {\n    transactionId,\n    userId,\n    currencyCode,\n    amount,\n    cryptoType,\n    status,\n    createdAt,\n    updatedAt\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"return-1",children:"Return"}),"\n",(0,i.jsxs)(n.p,{children:["The example returns the ",(0,i.jsx)(n.code,{children:"BankDepositTransaction"})," object with details such as ",(0,i.jsx)(n.code,{children:"transactionId"}),", ",(0,i.jsx)(n.code,{children:"userId"}),", ",(0,i.jsx)(n.code,{children:"currencyCode"}),", ",(0,i.jsx)(n.code,{children:"amount"}),", ",(0,i.jsx)(n.code,{children:"cryptoType"}),", ",(0,i.jsx)(n.code,{children:"status"}),", ",(0,i.jsx)(n.code,{children:"createdAt"}),", and ",(0,i.jsx)(n.code,{children:"updatedAt"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["In this example, the mutation confirms the bank deposit transaction with ID ",(0,i.jsx)(n.code,{children:"123"}),", specifying the currency code as USD, the amount as ",(0,i.jsx)(n.code,{children:"1000.0"}),", and using USDT as the default crypto type. The admin verification code is provided as ",(0,i.jsx)(n.code,{children:"123456"}),". The return value includes the details of the confirmed ",(0,i.jsx)(n.code,{children:"BankDepositTransaction"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);