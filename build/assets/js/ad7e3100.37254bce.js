"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[4688],{1150:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var a=t(4848),n=t(8453);const l={id:"make-allow-location",title:"Make Allow Location",sidebar_label:"Make Allow Location",sidebar_position:16},i=void 0,s={id:"api/user/make-allow-location",title:"Make Allow Location",description:"The functions described is accessible only to users with ADMIN privileges.",source:"@site/docs/api/user/make-allow-location.md",sourceDirName:"api/user",slug:"/api/user/make-allow-location",permalink:"/docs/api/user/make-allow-location",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/user/make-allow-location.md",tags:[],version:"current",sidebarPosition:16,frontMatter:{id:"make-allow-location",title:"Make Allow Location",sidebar_label:"Make Allow Location",sidebar_position:16},sidebar:"apiSidebar",previous:{title:"Add Disallowed Country",permalink:"/docs/api/user/add-disallowed-country"},next:{title:"Avatar Summary",permalink:"/docs/api/avatar/Avatar Summary"}},r={},c=[{value:"Mutation: <code>makeAllow</code>",id:"mutation-makeallow",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3}];function d(e){const o={admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.admonition,{type:"note",children:(0,a.jsx)(o.p,{children:"The functions described is accessible only to users with ADMIN privileges."})}),"\n",(0,a.jsxs)(o.p,{children:["The ",(0,a.jsx)(o.code,{children:"makeAllow"})," mutation allows an admin to remove a previously disallowed country from the disallowed list, permitting users from that country to access the system again."]}),"\n",(0,a.jsxs)(o.h3,{id:"mutation-makeallow",children:["Mutation: ",(0,a.jsx)(o.code,{children:"makeAllow"})]}),"\n",(0,a.jsx)(o.h4,{id:"schema",children:"Schema:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-graphql",children:"makeAllow(\n  locationId: Int!\n): Int\n"})}),"\n",(0,a.jsx)(o.h4,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.code,{children:"locationId"})," (Int): The unique ID of the disallowed location to be allowed. This field is mandatory."]}),"\n"]}),"\n",(0,a.jsx)(o.h4,{id:"return",children:"Return"}),"\n",(0,a.jsx)(o.p,{children:"The mutation returns an integer representing the ID of the location that has been allowed."}),"\n",(0,a.jsx)(o.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,a.jsxs)(o.p,{children:["The following is an example of how to use the ",(0,a.jsx)(o.code,{children:"makeAllow"})," mutation to allow a previously disallowed location:"]}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-graphql",children:"mutation {\n  makeAllow(\n    locationId: 123\n  )\n}\n"})}),"\n",(0,a.jsxs)(o.p,{children:["In this example, the mutation allows the location with the ID ",(0,a.jsx)(o.code,{children:"123"}),", removing it from the disallowed list. The return value will be the ID of the allowed location."]})]})}function u(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>i,x:()=>s});var a=t(6540);const n={},l=a.createContext(n);function i(e){const o=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(l.Provider,{value:o},e.children)}}}]);