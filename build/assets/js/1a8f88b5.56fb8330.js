"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[4356],{2836:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var n=s(4848),t=s(8453);const r={id:"user-summary",title:"User API Intro",sidebar_label:"User API Intro",sidebar_position:1},d=void 0,a={id:"api/user/user-summary",title:"User API Intro",description:"The User type represents a user in the system, including details such as registration date, email, name, role, and various verification statuses.",source:"@site/docs/api/user/user-summary.md",sourceDirName:"api/user",slug:"/api/user/user-summary",permalink:"/docs/api/user/user-summary",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/user/user-summary.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"user-summary",title:"User API Intro",sidebar_label:"User API Intro",sidebar_position:1},sidebar:"apiSidebar",previous:{title:"Disable 2FA",permalink:"/docs/api/registration/disable-2fa"},next:{title:"Get User",permalink:"/docs/api/user/get-user"}},l={},c=[{value:"Type: <code>User</code>",id:"type-user",level:3},{value:"Schema:",id:"schema",level:4},{value:"Fields",id:"fields",level:4},{value:"Type: <code>UserAvatar</code>",id:"type-useravatar",level:3},{value:"Schema:",id:"schema-1",level:4},{value:"Fields",id:"fields-1",level:4},{value:"Type: <code>UserSecurity</code>",id:"type-usersecurity",level:3},{value:"Schema:",id:"schema-2",level:4},{value:"Fields",id:"fields-2",level:4},{value:"Type: <code>UserVerify</code>",id:"type-userverify",level:3},{value:"Schema:",id:"schema-3",level:4},{value:"Fields",id:"fields-3",level:4}];function o(e){const i={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"User"})," type represents a user in the system, including details such as registration date, email, name, role, and various verification statuses."]}),"\n",(0,n.jsxs)(i.h3,{id:"type-user",children:["Type: ",(0,n.jsx)(i.code,{children:"User"})]}),"\n",(0,n.jsx)(i.h4,{id:"schema",children:"Schema:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-graphql",children:"type User {\n  id: Int,\n  regDate: Float,\n  updateDate: Float,\n  deleted: Int,\n  email: String,\n  name: String,\n  country: String,\n  phone: String,\n  birthday: Float,\n  lastLoginDate: Float,\n  role: [String],\n  tierLevel: Int,\n  tierPoint: Float,\n  provider: String,\n  providerId: String,\n  notifySetting: Int,\n  avatar: UserAvatar,\n  security: [UserSecurity],\n  verify: UserVerify\n}\n"})}),"\n",(0,n.jsx)(i.h4,{id:"fields",children:"Fields"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"id"})," (Int): The unique identifier for the user."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"regDate"})," (Float): The registration date of the user as a Unix timestamp."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"updateDate"})," (Float): The last update date of the user's information as a Unix timestamp."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"deleted"})," (Int): Indicates if the user is deleted (0 for not deleted, 1 for deleted)."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"email"})," (String): The user's email address."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"name"})," (String): The user's name."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"country"})," (String): The user's country."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"phone"})," (String): The user's phone number."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"birthday"})," (Float): The user's birthday as a Unix timestamp."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"lastLoginDate"})," (Float): The date of the user's last login as a Unix timestamp."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"role"}),' ([String]): The roles assigned to the user, e.g., ["ROLE_USER", "ROLE_ADMIN"].']}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"tierLevel"})," (Int): The user's tier level."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"tierPoint"})," (Float): The points accumulated by the user for their tier level."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"provider"}),' (String): The OAuth2 provider used for registration, e.g., "google".']}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"providerId"})," (String): The provider-specific ID for the user."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"notifySetting"})," (Int): The notification settings represented as a bitfield."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"avatar"})," (UserAvatar): The user's avatar details."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"security"})," ([UserSecurity]): The user's security settings."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"verify"})," (UserVerify): The user's verification statuses."]}),"\n"]}),"\n",(0,n.jsxs)(i.h3,{id:"type-useravatar",children:["Type: ",(0,n.jsx)(i.code,{children:"UserAvatar"})]}),"\n",(0,n.jsx)(i.p,{children:"Represents the avatar information associated with a user."}),"\n",(0,n.jsx)(i.h4,{id:"schema-1",children:"Schema:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-graphql",children:"type UserAvatar {\n  id: Int,\n  regDate: Float,\n  updateDate: Float,\n  deleted: Int,\n  purchased: String,\n  selected: String,\n  prefix: String,\n  name: String\n}\n"})}),"\n",(0,n.jsx)(i.h4,{id:"fields-1",children:"Fields"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"id"})," (Int): The unique identifier for the user's avatar."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"regDate"})," (Float): The registration date of the avatar as a Unix timestamp."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"updateDate"})," (Float): The last update date of the avatar's information as a Unix timestamp."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"deleted"})," (Int): Indicates if the avatar is deleted (0 for not deleted, 1 for deleted)."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"purchased"})," (String): JSON string representing the purchased avatar components."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"selected"})," (String): JSON string representing the selected avatar components."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"prefix"}),' (String): Prefix for the avatar, e.g., "Tesla".']}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"name"}),' (String): Name for the avatar, e.g., "12".']}),"\n"]}),"\n",(0,n.jsxs)(i.h3,{id:"type-usersecurity",children:["Type: ",(0,n.jsx)(i.code,{children:"UserSecurity"})]}),"\n",(0,n.jsx)(i.p,{children:"Represents the security settings associated with a user."}),"\n",(0,n.jsx)(i.h4,{id:"schema-2",children:"Schema:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-graphql",children:"type UserSecurity {\n  id: Int,\n  regDate: Float,\n  updateDate: Float,\n  deleted: Int,\n  authType: String,\n  tfaEnabled: Boolean\n}\n"})}),"\n",(0,n.jsx)(i.h4,{id:"fields-2",children:"Fields"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"id"})," (Int): The unique identifier for the security settings."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"regDate"})," (Float): The registration date of the security settings as a Unix timestamp."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"updateDate"})," (Float): The last update date of the security settings as a Unix timestamp."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"deleted"})," (Int): Indicates if the security settings are deleted (0 for not deleted, 1 for deleted)."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"authType"}),' (String): The authentication type, e.g., "password", "oauth2".']}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"tfaEnabled"})," (Boolean): Indicates if two-factor authentication is enabled."]}),"\n"]}),"\n",(0,n.jsxs)(i.h3,{id:"type-userverify",children:["Type: ",(0,n.jsx)(i.code,{children:"UserVerify"})]}),"\n",(0,n.jsx)(i.p,{children:"Represents the verification statuses associated with a user."}),"\n",(0,n.jsx)(i.h4,{id:"schema-3",children:"Schema:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-graphql",children:"type UserVerify {\n  id: Int,\n  regDate: Float,\n  updateDate: Float,\n  deleted: Int,\n  emailVerified: Boolean,\n  phoneVerified: Boolean,\n  kycVerified: Boolean,\n  amlVerified: Boolean,\n  kybVerified: Boolean\n}\n"})}),"\n",(0,n.jsx)(i.h4,{id:"fields-3",children:"Fields"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"id"})," (Int): The unique identifier for the verification statuses."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"regDate"})," (Float): The registration date of the verification statuses as a Unix timestamp."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"updateDate"})," (Float): The last update date of the verification statuses as a Unix timestamp."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"deleted"})," (Int): Indicates if the verification statuses are deleted (0 for not deleted, 1 for deleted)."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"emailVerified"})," (Boolean): Indicates if the email is verified."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"phoneVerified"})," (Boolean): Indicates if the phone number is verified."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"kycVerified"})," (Boolean): Indicates if the KYC (Know Your Customer) verification is completed."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"amlVerified"})," (Boolean): Indicates if the AML (Anti-Money Laundering) verification is completed."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"kybVerified"})," (Boolean): Indicates if the KYB (Know Your Business) verification is completed."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>d,x:()=>a});var n=s(6540);const t={},r=n.createContext(t);function d(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);