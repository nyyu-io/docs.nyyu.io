"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[6636],{8405:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var n=t(4848),o=t(8453);const s={},r=void 0,c={id:"api/Notification/Get Notifications with Offset and Limit",title:"Get Notifications with Offset and Limit",description:"The getNotifications query is used to retrieve a paginated list of notifications for the current user.",source:"@site/docs/api/Notification/Get Notifications with Offset and Limit.md",sourceDirName:"api/Notification",slug:"/api/Notification/Get Notifications with Offset and Limit",permalink:"/docs/api/Notification/Get Notifications with Offset and Limit",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/Notification/Get Notifications with Offset and Limit.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Get All Unread Notifications",permalink:"/docs/api/Notification/Get All Unread Notifications"},next:{title:"Notification Summary",permalink:"/docs/api/Notification/Notification Summary"}},a={},d=[{value:"Query: <code>getNotifications</code>",id:"query-getnotifications",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Query",id:"example-query",level:3},{value:"Return",id:"return-1",level:3}];function l(e){const i={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"getNotifications"})," query is used to retrieve a paginated list of notifications for the current user."]}),"\n",(0,n.jsxs)(i.h3,{id:"query-getnotifications",children:["Query: ",(0,n.jsx)(i.code,{children:"getNotifications"})]}),"\n",(0,n.jsx)(i.h4,{id:"schema",children:"Schema:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-graphql",children:"getNotifications(\n  offset: Int,\n  limit: Int\n): [Notification]\n"})}),"\n",(0,n.jsx)(i.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"offset"})," (Int): The number of notifications to skip from the start. This field is optional."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"limit"})," (Int): The number of notifications to retrieve. This field is optional but should be specified to limit the results."]}),"\n"]}),"\n",(0,n.jsx)(i.h4,{id:"return",children:"Return"}),"\n",(0,n.jsxs)(i.p,{children:["The query returns a list of ",(0,n.jsx)(i.code,{children:"Notification"})," objects representing the paginated notifications."]}),"\n",(0,n.jsx)(i.h3,{id:"example-query",children:"Example Query"}),"\n",(0,n.jsxs)(i.p,{children:["The following is an example of how to use the ",(0,n.jsx)(i.code,{children:"getNotifications"})," query to retrieve a paginated list of notifications:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-graphql",children:"query {\n  getNotifications(\n    offset: 0,\n    limit: 10\n  ) {\n    id,\n    userId,\n    timeStamp,\n    nType,\n    read,\n    title,\n    msg\n  }\n}\n"})}),"\n",(0,n.jsx)(i.h3,{id:"return-1",children:"Return"}),"\n",(0,n.jsxs)(i.p,{children:["The example returns a list of ",(0,n.jsx)(i.code,{children:"Notification"})," objects with details such as ",(0,n.jsx)(i.code,{children:"id"}),", ",(0,n.jsx)(i.code,{children:"userId"}),", ",(0,n.jsx)(i.code,{children:"timeStamp"}),", ",(0,n.jsx)(i.code,{children:"nType"}),", ",(0,n.jsx)(i.code,{children:"read"}),", ",(0,n.jsx)(i.code,{children:"title"}),", and ",(0,n.jsx)(i.code,{children:"msg"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["In this example, the query retrieves the first 10 notifications (",(0,n.jsx)(i.code,{children:"offset"})," is set to ",(0,n.jsx)(i.code,{children:"0"})," and ",(0,n.jsx)(i.code,{children:"limit"})," is set to ",(0,n.jsx)(i.code,{children:"10"}),") for the current user. Each ",(0,n.jsx)(i.code,{children:"Notification"})," object in the returned list includes details like ",(0,n.jsx)(i.code,{children:"id"}),", ",(0,n.jsx)(i.code,{children:"userId"}),", ",(0,n.jsx)(i.code,{children:"timeStamp"}),", ",(0,n.jsx)(i.code,{children:"nType"}),", ",(0,n.jsx)(i.code,{children:"read"}),", ",(0,n.jsx)(i.code,{children:"title"}),", and ",(0,n.jsx)(i.code,{children:"msg"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>c});var n=t(6540);const o={},s=n.createContext(o);function r(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);