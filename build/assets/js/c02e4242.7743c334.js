"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[5457],{3961:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var i=t(4848),s=t(8453);const a={},d=void 0,l={id:"api/Auction/Auction Summary",title:"Auction Summary",description:"The Auction type represents an auction round within the system, including details about the auction's timing, tokens, status, and associated avatars.",source:"@site/docs/api/Auction/Auction Summary.md",sourceDirName:"api/Auction",slug:"/api/Auction/Auction Summary",permalink:"/docs/api/Auction/Auction Summary",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/Auction/Auction Summary.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",next:{title:"Check Rounds",permalink:"/docs/api/Auction/Check Rounds"}},c={},o=[{value:"Types",id:"types",level:3},{value:"Auction",id:"auction",level:4},{value:"Fields",id:"fields",level:5},{value:"AvatarSet",id:"avatarset",level:4},{value:"Fields",id:"fields-1",level:5},{value:"AvatarSetInput",id:"avatarsetinput",level:4},{value:"Fields",id:"fields-2",level:5},{value:"AuctionStats",id:"auctionstats",level:4},{value:"Fields",id:"fields-3",level:5},{value:"CurrentRound",id:"currentround",level:4},{value:"Fields",id:"fields-4",level:5},{value:"Auction Status Constants",id:"auction-status-constants",level:3},{value:"Status Definitions",id:"status-definitions",level:3}];function r(e){const n={code:"code",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Auction"})," type represents an auction round within the system, including details about the auction's timing, tokens, status, and associated avatars."]}),"\n",(0,i.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,i.jsx)(n.h4,{id:"auction",children:"Auction"}),"\n",(0,i.jsx)(n.p,{children:"Represents an auction round with details on timing, tokens, avatars, and status."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:"type Auction {\n  id: Int!,\n  regDate: Float,\n  updateDate: Float,\n  deleted: Int,\n  round: Int,\n  startedAt: Float,\n  endedAt: Float,\n  totalToken: Float,\n  minPrice: Float,\n  avatar: [AvatarSet],\n  token: Float,\n  sold: Float,\n  stats: AuctionStats,\n  status: Int\n}\n"})}),"\n",(0,i.jsx)(n.h5,{id:"fields",children:"Fields"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (Int!): The unique identifier for the auction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"regDate"})," (Float): The registration date of the auction as a Unix timestamp."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"updateDate"})," (Float): The last update date of the auction as a Unix timestamp."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"deleted"})," (Int): Indicates if the auction is deleted (0 for not deleted, 1 for deleted)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"round"})," (Int): The round number of the auction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"startedAt"})," (Float): The start time of the auction as a Unix timestamp."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"endedAt"})," (Float): The end time of the auction as a Unix timestamp."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"totalToken"})," (Float): The total number of tokens available in the auction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"minPrice"})," (Float): The minimum price per token in the auction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"avatar"})," ([AvatarSet]): A list of avatar sets associated with the auction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"token"})," (Float): Additional tokens allocated for avatar matching users."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sold"})," (Float): The amount of tokens sold in the auction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"stats"})," (AuctionStats): Statistics about the auction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"status"})," (Int): The status of the auction. Possible values:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"}),": PENDING"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"}),": COUNTDOWN"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2"}),": STARTED"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"3"}),": ENDED"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"avatarset",children:"AvatarSet"}),"\n",(0,i.jsx)(n.p,{children:"Represents a set of avatar components associated with an auction."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:"type AvatarSet {\n  id: Int!,\n  regDate: Float,\n  updateDate: Float,\n  deleted: Int,\n  groupId: String,\n  compId: Int\n}\n"})}),"\n",(0,i.jsx)(n.h5,{id:"fields-1",children:"Fields"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"id"})," (Int!): The unique identifier for the avatar set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"regDate"})," (Float): The registration date of the avatar set as a Unix timestamp."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"updateDate"})," (Float): The last update date of the avatar set as a Unix timestamp."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"deleted"})," (Int): Indicates if the set is deleted (0 for not deleted, 1 for deleted)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"groupId"})," (String): The category of the component."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"compId"})," (Int): The unique ID of the component."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"avatarsetinput",children:"AvatarSetInput"}),"\n",(0,i.jsx)(n.p,{children:"Input type for setting avatar components in an auction."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:"input AvatarSetInput {\n  groupId: String,\n  compId: Int\n}\n"})}),"\n",(0,i.jsx)(n.h5,{id:"fields-2",children:"Fields"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"groupId"})," (String): The category of the component."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"compId"})," (Int): The unique ID of the component."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"auctionstats",children:"AuctionStats"}),"\n",(0,i.jsx)(n.p,{children:"Represents statistics for an auction."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:"type AuctionStats {\n  qty: Float,\n  win: Float,\n  fail: Float\n}\n"})}),"\n",(0,i.jsx)(n.h5,{id:"fields-3",children:"Fields"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"qty"})," (Float): Quantity of tokens in the auction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"win"})," (Float): Amount of winning bids."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fail"})," (Float): Amount of failed bids."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"currentround",children:"CurrentRound"}),"\n",(0,i.jsx)(n.p,{children:"Represents the current auction or presale round."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:"type CurrentRound {\n  status: String,\n  auction: Auction,\n  presale: PreSale\n}\n"})}),"\n",(0,i.jsx)(n.h5,{id:"fields-4",children:"Fields"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"status"})," (String): Status of the current round."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"auction"})," (Auction): The current auction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"presale"})," (PreSale): The current presale."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"auction-status-constants",children:"Auction Status Constants"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PENDING"})," (0): Auction has been created but not yet started."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"COUNTDOWN"})," (1): Auction is counting down and will start automatically when the counter reaches zero."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"STARTED"})," (2): Auction is currently ongoing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ENDED"})," (3): Auction has ended."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"status-definitions",children:"Status Definitions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PENDING"}),": The auction round has been created and is awaiting start."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"COUNTDOWN"}),": The auction round is in a countdown phase and will start automatically once the countdown completes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"STARTED"}),": The auction round is currently active and accepting bids."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ENDED"}),": The auction round has concluded and is no longer accepting bids."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This system allows for detailed tracking and management of auction rounds, including associated avatar components and real-time status updates."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>l});var i=t(6540);const s={},a=i.createContext(s);function d(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);