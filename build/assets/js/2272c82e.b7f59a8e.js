"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[9906],{2723:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=a(4848),n=a(8453);const i={},s=void 0,o={id:"api/withdraw/PayPal Withdraw Request",title:"PayPal Withdraw Request",description:"The paypalWithdrawRequest mutation allows a user to request a withdrawal of assets via PayPal. This mutation sends a request to the admin to process the withdrawal. It does not create a real payout request but is used to notify the admin of the user's withdrawal request.",source:"@site/docs/api/withdraw/PayPal Withdraw Request.md",sourceDirName:"api/withdraw",slug:"/api/withdraw/PayPal Withdraw Request",permalink:"/docs/api/withdraw/PayPal Withdraw Request",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/withdraw/PayPal Withdraw Request.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Generate Withdraw Code",permalink:"/docs/api/withdraw/Generate Withdraw Code"},next:{title:"Send Withdraw Confirmation Code",permalink:"/docs/api/withdraw/Send Withdraw Confirmation Code"}},d={},l=[{value:"Mutation: <code>paypalWithdrawRequest</code>",id:"mutation-paypalwithdrawrequest",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3},{value:"Note",id:"note",level:3}];function h(e){const t={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"paypalWithdrawRequest"})," mutation allows a user to request a withdrawal of assets via PayPal. This mutation sends a request to the admin to process the withdrawal. It does not create a real payout request but is used to notify the admin of the user's withdrawal request."]}),"\n",(0,r.jsxs)(t.h3,{id:"mutation-paypalwithdrawrequest",children:["Mutation: ",(0,r.jsx)(t.code,{children:"paypalWithdrawRequest"})]}),"\n",(0,r.jsx)(t.h4,{id:"schema",children:"Schema:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-graphql",children:"paypalWithdrawRequest(\n  email: String!,\n  target: String!,\n  amount: Float!,\n  sourceToken: String!,\n  code: String!\n): PaypalWithdraw\n"})}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"email"})," (String): The receiver's email address (PayPal account email). This field is mandatory."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"target"})," (String): The currency type that the user is going to send. This field is mandatory."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"amount"})," (Float): The amount to withdraw. This field is mandatory."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"sourceToken"})," (String): The cryptocurrency type to withdraw from the user's wallet. This field is mandatory."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"code"})," (String): The verification code received from the email. This field is mandatory."]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"return",children:"Return"}),"\n",(0,r.jsxs)(t.p,{children:["The mutation returns a ",(0,r.jsx)(t.code,{children:"PaypalWithdraw"})," object representing the withdrawal request."]}),"\n",(0,r.jsx)(t.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,r.jsxs)(t.p,{children:["The following is an example of how to use the ",(0,r.jsx)(t.code,{children:"paypalWithdrawRequest"})," mutation to request a withdrawal via PayPal:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-graphql",children:'mutation {\n  paypalWithdrawRequest(\n    email: "user@example.com",\n    target: "USD",\n    amount: 100.0,\n    sourceToken: "BTC",\n    code: "123456"\n  ) {\n    id,\n    userId,\n    email,\n    target,\n    amount,\n    sourceToken,\n    status,\n    createdAt,\n    updatedAt\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"note",children:"Note"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"This mutation generates a request for the admin to process the withdrawal. It does not create a real PayPal payout request."}),"\n",(0,r.jsxs)(t.li,{children:["The ",(0,r.jsx)(t.code,{children:"code"})," parameter is the verification code that the user received via email."]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["In this example, the mutation requests a PayPal withdrawal of 100 USD from the user's BTC wallet, sending the request to the admin for processing. The return value includes the details of the ",(0,r.jsx)(t.code,{children:"PaypalWithdraw"})," request."]})]})}function c(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>o});var r=a(6540);const n={},i=r.createContext(n);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);