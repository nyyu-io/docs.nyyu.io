"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[6709],{4301:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=i(4848),t=i(8453);const r={id:"sign-in",title:"Sign in",sidebar_label:"Sign in",sidebar_position:6},a=void 0,o={id:"api/registration/sign-in",title:"Sign in",description:"The signin mutation is used to authenticate a user using their email and password. If the account is verified and 2FA is set up, the appropriate 2FA code will be sent.",source:"@site/docs/api/registration/sign-in.md",sourceDirName:"api/registration",slug:"/api/registration/sign-in",permalink:"/docs/api/registration/sign-in",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/registration/sign-in.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"sign-in",title:"Sign in",sidebar_label:"Sign in",sidebar_position:6},sidebar:"apiSidebar",previous:{title:"Confirm 2FA Setting",permalink:"/docs/api/registration/confirm-2fa-setting"},next:{title:"Sign in 2FA Check",permalink:"/docs/api/registration/sign-in-2fa-check"}},l={},d=[{value:"Mutation: <code>signin</code>",id:"mutation-signin",level:3},{value:"Schema:",id:"schema",level:4},{value:"Type: <code>Credentials</code>",id:"type-credentials",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3}];function c(e){const n={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"signin"})," mutation is used to authenticate a user using their email and password. If the account is verified and 2FA is set up, the appropriate 2FA code will be sent."]}),"\n",(0,s.jsxs)(n.h3,{id:"mutation-signin",children:["Mutation: ",(0,s.jsx)(n.code,{children:"signin"})]}),"\n",(0,s.jsx)(n.h4,{id:"schema",children:"Schema:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-graphql",children:"signin(\n  email: String!,\n  password: String!\n): Credentials!\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"type-credentials",children:["Type: ",(0,s.jsx)(n.code,{children:"Credentials"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-graphql",children:"type Credentials {\n  status: String\n  token: String\n  twoStep: [String]\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"status"})," (String): The status of the sign-in attempt."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"token"})," (String): A token for the next 2FA step (not a JWT token for authorization)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"twoStep"})," ([String]): A list of the set 2FA methods, e.g., ",(0,s.jsx)(n.code,{children:"['app', 'email']"})," or ",(0,s.jsx)(n.code,{children:"['email', 'phone']"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"email"})," (String): The user's email address. This field is mandatory."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"password"})," (String): The user's password. This field is mandatory."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"return",children:"Return"}),"\n",(0,s.jsx)(n.p,{children:"The mutation returns an object containing the status, token, and 2FA methods if applicable."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If successful:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"status"}),": ",(0,s.jsx)(n.code,{children:'"Success"'})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"token"}),": A token for the next 2FA step (not a JWT token for authorization)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["If failed:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"status"}),": ",(0,s.jsx)(n.code,{children:'"Failed"'})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"token"}),": An error message indicating the reason for the failure:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"password mismatch"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"please verify"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"Please set 2FA"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'"2FA Error"'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,s.jsxs)(n.p,{children:["The following is an example of how to use the ",(0,s.jsx)(n.code,{children:"signin"})," mutation to authenticate a user:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-graphql",children:'mutation {\n  signin(\n    email: "arthurclark655@gmail.com",\n    password: "38f@3n102du/qA!"\n  ) {\n    status,\n    token\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In this example, the mutation attempts to sign in the user with the email address ",(0,s.jsx)(n.code,{children:"arthurclark655@gmail.com"})," and password ",(0,s.jsx)(n.code,{children:"38f@3n102du/qA!"}),". The return value will indicate whether the sign-in was successful or if there was an error, such as a password mismatch or the need to verify the account or set up 2FA."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var s=i(6540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);