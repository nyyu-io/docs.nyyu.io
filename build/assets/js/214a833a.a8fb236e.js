"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[838],{810:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=r(4848),n=r(8453);const o={},i=void 0,s={id:"api/deposit/Confirm PayPal Checkout Order",title:"Confirm PayPal Checkout Order",description:"The captureOrderForDeposit mutation allows a user to confirm a PayPal payment for a deposit into their wallet. The backend will verify the payment and, if successful, add the balance to the user's internal wallet.",source:"@site/docs/api/deposit/Confirm PayPal Checkout Order.md",sourceDirName:"api/deposit",slug:"/api/deposit/Confirm PayPal Checkout Order",permalink:"/docs/api/deposit/Confirm PayPal Checkout Order",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/deposit/Confirm PayPal Checkout Order.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Confirm Bank Deposit by Admin",permalink:"/docs/api/deposit/Confirm Bank Deposit by Admin"},next:{title:"Create Bank Deposit Request",permalink:"/docs/api/deposit/Create Bank Deposit Request"}},l={},d=[{value:"Mutation: <code>captureOrderForDeposit</code>",id:"mutation-captureorderfordeposit",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3},{value:"Return",id:"return-1",level:3}];function c(e){const t={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"captureOrderForDeposit"})," mutation allows a user to confirm a PayPal payment for a deposit into their wallet. The backend will verify the payment and, if successful, add the balance to the user's internal wallet."]}),"\n",(0,a.jsxs)(t.h3,{id:"mutation-captureorderfordeposit",children:["Mutation: ",(0,a.jsx)(t.code,{children:"captureOrderForDeposit"})]}),"\n",(0,a.jsx)(t.h4,{id:"schema",children:"Schema:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:"captureOrderForDeposit(\n  orderId: String!\n): Boolean\n"})}),"\n",(0,a.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"orderId"})," (String): The PayPal checkout order ID. This field is mandatory."]}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"return",children:"Return"}),"\n",(0,a.jsxs)(t.p,{children:["The mutation returns a ",(0,a.jsx)(t.code,{children:"Boolean"})," indicating whether the PayPal order was successfully captured and the balance was added to the internal wallet."]}),"\n",(0,a.jsx)(t.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,a.jsxs)(t.p,{children:["The following is an example of how to use the ",(0,a.jsx)(t.code,{children:"captureOrderForDeposit"})," mutation to confirm a PayPal payment for a deposit:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:'mutation {\n  captureOrderForDeposit(\n    orderId: "PAYPAL_ORDER_ID"\n  )\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"return-1",children:"Return"}),"\n",(0,a.jsxs)(t.p,{children:["The example returns ",(0,a.jsx)(t.code,{children:"true"})," if the PayPal order was successfully captured and the balance was added to the internal wallet, or ",(0,a.jsx)(t.code,{children:"false"})," otherwise."]}),"\n",(0,a.jsxs)(t.p,{children:["In this example, the mutation captures the PayPal order with the ID ",(0,a.jsx)(t.code,{children:"PAYPAL_ORDER_ID"}),". The backend will check if the payment has been processed successfully. If successful, the balance will be added to the user's internal wallet."]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var a=r(6540);const n={},o=a.createContext(n);function i(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);