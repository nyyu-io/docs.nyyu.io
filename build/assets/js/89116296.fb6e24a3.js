"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[8133],{9431:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=t(4848),o=t(8453);const a={},s=void 0,r={id:"api/Avatar/Update Avatar Component",title:"Update Avatar Component",description:"The functions described is accessible only to users with ADMIN privileges.",source:"@site/docs/api/Avatar/Update Avatar Component.md",sourceDirName:"api/Avatar",slug:"/api/Avatar/Update Avatar Component",permalink:"/docs/api/Avatar/Update Avatar Component",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/Avatar/Update Avatar Component.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Get Components By Group",permalink:"/docs/api/Avatar/Get Components By Group"},next:{title:"Update Avatar Profile",permalink:"/docs/api/Avatar/Update Avatar Profile"}},d={},l=[{value:"Mutation: <code>updateComponent</code>",id:"mutation-updatecomponent",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3}];function c(e){const n={admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The functions described is accessible only to users with ADMIN privileges."})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"updateComponent"})," mutation allows an admin to update the details of an existing avatar component."]}),"\n",(0,i.jsxs)(n.h3,{id:"mutation-updatecomponent",children:["Mutation: ",(0,i.jsx)(n.code,{children:"updateComponent"})]}),"\n",(0,i.jsx)(n.h4,{id:"schema",children:"Schema:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:"mutation updateComponent(\n  groupId: String!,\n  compId: String!,\n  tierLevel: Int,\n  price: Float,\n  limited: Int,\n  svg: String,\n  width: Int,\n  top: Int,\n  left: Int\n): AvatarComponent\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"groupId"})," (String): The group ID of the component to update. This field is mandatory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"compId"})," (String): The unique ID of the component to update. This field is mandatory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tierLevel"})," (Int): The tier level of the component. This field is optional."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"price"})," (Float): The price of the component. This field is optional."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"limited"})," (Int): The limit on the number of components available. This field is optional."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"svg"})," (String): The SVG data of the component. This field is optional."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"width"})," (Int): The width of the component. This field is optional."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"top"})," (Int): The top position of the component. This field is optional."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"left"})," (Int): The left position of the component. This field is optional."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"return",children:"Return"}),"\n",(0,i.jsxs)(n.p,{children:["The mutation returns the updated ",(0,i.jsx)(n.code,{children:"AvatarComponent"})," if successful, otherwise it returns ",(0,i.jsx)(n.code,{children:"null"})," or an exception."]}),"\n",(0,i.jsx)(n.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,i.jsxs)(n.p,{children:["The following is an example of how to use the ",(0,i.jsx)(n.code,{children:"updateComponent"})," mutation to update an avatar component:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:'mutation {\n  updateComponent(\n    groupId: "engineers",\n    compId: "101",\n    tierLevel: 2,\n    price: 9.99,\n    limited: 100,\n    svg: "<svg>...</svg>",\n    width: 50,\n    top: 10,\n    left: 20\n  ) {\n    id,\n    groupId,\n    compId,\n    tierLevel,\n    price,\n    limited,\n    svg,\n    width,\n    top,\n    left\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In this example, the mutation updates the avatar component with the group ID ",(0,i.jsx)(n.code,{children:"engineers"})," and component ID ",(0,i.jsx)(n.code,{children:"101"}),", setting the tier level, price, limit, SVG data, width, top, and left positions. The return value includes the updated ",(0,i.jsx)(n.code,{children:"AvatarComponent"})," with all specified attributes."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(6540);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);