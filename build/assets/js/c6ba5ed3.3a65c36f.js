"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[6910],{2980:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(4848),r=n(8453);const i={},s=void 0,l={id:"api/Avatar/Create New Avatar Profile",title:"Create New Avatar Profile",description:"The functions described is accessible only to users with ADMIN privileges.",source:"@site/docs/api/Avatar/Create New Avatar Profile.md",sourceDirName:"api/Avatar",slug:"/api/Avatar/Create New Avatar Profile",permalink:"/docs/api/Avatar/Create New Avatar Profile",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/Avatar/Create New Avatar Profile.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Create Avatar Component",permalink:"/docs/api/Avatar/Create Avatar Component"},next:{title:"Get Avatar By ID",permalink:"/docs/api/Avatar/Get Avatar By ID"}},o={},c=[{value:"Mutation: <code>createNewAvatar</code>",id:"mutation-createnewavatar",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3}];function d(e){const t={admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsx)(t.p,{children:"The functions described is accessible only to users with ADMIN privileges."})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"createNewAvatar"})," mutation allows an admin to create a new avatar profile with specified attributes."]}),"\n",(0,a.jsxs)(t.h3,{id:"mutation-createnewavatar",children:["Mutation: ",(0,a.jsx)(t.code,{children:"createNewAvatar"})]}),"\n",(0,a.jsx)(t.h4,{id:"schema",children:"Schema:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:"createNewAvatar(\n  fname: String!,\n  surname: String!,\n  skillSet: [SkillSetInput]!,\n  avatarSet: [AvatarSetInput],\n  factsSet: [FactsInput],\n  hairColor: String,\n  details: String\n): AvatarProfile\n"})}),"\n",(0,a.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"fname"})," (String): The first name of the avatar profile. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"surname"})," (String): The surname of the avatar profile. This field is mandatory."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"skillSet"})," ([SkillSetInput]): A list of skills for the avatar profile. Each skill includes:","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"name"})," (String): The name of the skill."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"rate"})," (Int): The number of stars rating the skill."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"avatarSet"})," ([AvatarSetInput]): A list of avatar components. Each component includes:","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"groupId"})," (String): The group ID of the component."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"compId"})," (Int): The component ID."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"factsSet"})," ([FactsInput]): A list of facts about the avatar. Each fact includes:","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"topic"})," (String): The topic of the fact."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"detail"})," (String): The detailed content of the topic."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"hairColor"})," (String): The hair color of the avatar. This field is optional."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"details"})," (String): Additional details about the avatar. This field is optional."]}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"return",children:"Return"}),"\n",(0,a.jsxs)(t.p,{children:["The mutation returns the created ",(0,a.jsx)(t.code,{children:"AvatarProfile"})," if successful, otherwise it returns ",(0,a.jsx)(t.code,{children:"null"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,a.jsxs)(t.p,{children:["The following is an example of how to use the ",(0,a.jsx)(t.code,{children:"createNewAvatar"})," mutation to create a new avatar profile:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:'mutation {\n  createNewAvatar(\n    fname: "Nicola",\n    surname: "Tesla",\n    skillSet: [\n      { name: "Inventing", rate: 5 },\n      { name: "Electrical Engineering", rate: 5 }\n    ],\n    avatarSet: [\n      { groupId: "engineers", compId: 101 }\n    ],\n    factsSet: [\n      { topic: "Achievements", detail: "Developed the modern AC electricity supply system" }\n    ],\n    hairColor: "Black",\n    details: "A visionary inventor known for his contributions to the development of alternating current (AC) power systems."\n  ) {\n    id,\n    fname,\n    surname,\n    skillSet {\n      name,\n      rate\n    },\n    avatarSet {\n      groupId,\n      compId\n    },\n    factsSet {\n      topic,\n      detail\n    },\n    hairColor,\n    details\n  }\n}\n'})}),"\n",(0,a.jsxs)(t.p,{children:['In this example, the mutation creates a new avatar profile with the first name "Nicola" and surname "Tesla", along with specified skills, avatar components, facts, hair color, and additional details. The return value includes the created ',(0,a.jsx)(t.code,{children:"AvatarProfile"})," with all specified attributes."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var a=n(6540);const r={},i=a.createContext(r);function s(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);