"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[3527],{5262:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var n=t(4848),a=t(8453);const r={},s=void 0,d={id:"api/Withdraw/Confirm PayPal Withdrawal Request",title:"Confirm PayPal Withdrawal Request",description:"The functions described is accessible only to users with ADMIN privileges.",source:"@site/docs/api/Withdraw/Confirm PayPal Withdrawal Request.md",sourceDirName:"api/Withdraw",slug:"/api/Withdraw/Confirm PayPal Withdrawal Request",permalink:"/docs/api/Withdraw/Confirm PayPal Withdrawal Request",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/Withdraw/Confirm PayPal Withdrawal Request.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Change Withdrawal Request Show Status",permalink:"/docs/api/Withdraw/Change Withdrawal Request Show Status"},next:{title:"Crypto Withdrawal Request",permalink:"/docs/api/Withdraw/Crypto Withdrawal Request"}},o={},l=[{value:"Mutation: <code>confirmPaypalWithdraw</code>",id:"mutation-confirmpaypalwithdraw",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3},{value:"Note",id:"note",level:3}];function c(e){const i={admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.admonition,{type:"note",children:(0,n.jsx)(i.p,{children:"The functions described is accessible only to users with ADMIN privileges."})}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"confirmPaypalWithdraw"})," mutation allows an admin to approve or deny a PayPal withdrawal request. This involves verifying the withdrawal details and updating the request status accordingly."]}),"\n",(0,n.jsxs)(i.h3,{id:"mutation-confirmpaypalwithdraw",children:["Mutation: ",(0,n.jsx)(i.code,{children:"confirmPaypalWithdraw"})]}),"\n",(0,n.jsx)(i.h4,{id:"schema",children:"Schema:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-graphql",children:"confirmPaypalWithdraw(\n  id: Int!,\n  status: Int!,\n  deniedReason: String,\n  code: String!\n): Int\n"})}),"\n",(0,n.jsx)(i.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"id"})," (Int): The ID of the withdrawal request. This field is mandatory."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"status"})," (Int): The action to take on the request. Possible values:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"1"}),": Approve"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"2"}),": Deny"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"deniedReason"})," (String): The reason for denial if the request is denied. This field is optional."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"code"})," (String): The admin's 2FA verification code received via SMS. This field is mandatory."]}),"\n"]}),"\n",(0,n.jsx)(i.h4,{id:"return",children:"Return"}),"\n",(0,n.jsx)(i.p,{children:"The mutation returns an integer indicating the updated status of the withdrawal request."}),"\n",(0,n.jsx)(i.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,n.jsxs)(i.p,{children:["The following is an example of how to use the ",(0,n.jsx)(i.code,{children:"confirmPaypalWithdraw"})," mutation to approve or deny a PayPal withdrawal request:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-graphql",children:'mutation {\n  confirmPaypalWithdraw(\n    id: 123,\n    status: 1,\n    deniedReason: "",\n    code: "654321"\n  )\n}\n'})}),"\n",(0,n.jsx)(i.h3,{id:"note",children:"Note"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["If the status is ",(0,n.jsx)(i.code,{children:"2"})," (deny), the ",(0,n.jsx)(i.code,{children:"deniedReason"})," field should be provided."]}),"\n",(0,n.jsxs)(i.li,{children:["The ",(0,n.jsx)(i.code,{children:"code"})," parameter is the 2FA verification code received via SMS."]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["In this example, the mutation approves the PayPal withdrawal request with ID ",(0,n.jsx)(i.code,{children:"123"}),". The ",(0,n.jsx)(i.code,{children:"status"})," is set to ",(0,n.jsx)(i.code,{children:"1"})," for approval, and the ",(0,n.jsx)(i.code,{children:"code"})," is provided for 2FA verification. The return value indicates the updated status of the withdrawal request."]})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>d});var n=t(6540);const a={},r=n.createContext(a);function s(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);