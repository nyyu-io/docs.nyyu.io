"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[1326],{7882:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=i(4848),t=i(8453);const r={},s=void 0,c={id:"api/User/Confirm Email Change",title:"Confirm Email Change",description:"The confirmEmailChange mutation is used to confirm a change of the user's email address. After receiving a verification code from the backend, this mutation finalizes the email change request.",source:"@site/docs/api/User/Confirm Email Change.md",sourceDirName:"api/User",slug:"/api/User/Confirm Email Change",permalink:"/docs/api/User/Confirm Email Change",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/User/Confirm Email Change.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Change Role",permalink:"/docs/api/User/Change Role"},next:{title:"Create New User By Admin",permalink:"/docs/api/User/Create New User By Admin"}},o={},l=[{value:"Mutation: <code>confirmEmailChange</code>",id:"mutation-confirmemailchange",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3}];function d(e){const n={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"confirmEmailChange"})," mutation is used to confirm a change of the user's email address. After receiving a verification code from the backend, this mutation finalizes the email change request."]}),"\n",(0,a.jsxs)(n.h3,{id:"mutation-confirmemailchange",children:["Mutation: ",(0,a.jsx)(n.code,{children:"confirmEmailChange"})]}),"\n",(0,a.jsx)(n.h4,{id:"schema",children:"Schema:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"confirmEmailChange(\n  code: String!,\n  newEmail: String!\n): String!\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"code"})," (String): The verification code sent to the current email address. This field is mandatory."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"newEmail"})," (String): The new email address to be set. This field is mandatory."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"return",children:"Return"}),"\n",(0,a.jsx)(n.p,{children:"The mutation returns a string indicating the result of the email change confirmation."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:'"Success"'}),": Indicates that the email address has been successfully changed."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:'"Failed"'}),": Indicates that there was an error in processing the request, such as an incorrect verification code."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,a.jsxs)(n.p,{children:["The following is an example of how to use the ",(0,a.jsx)(n.code,{children:"confirmEmailChange"})," mutation to confirm an email change:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:'mutation {\n  confirmEmailChange(\n    code: "123456",\n    newEmail: "newemail@example.com"\n  )\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["In this example, the mutation confirms the email change for the user, using the verification code ",(0,a.jsx)(n.code,{children:"123456"})," and setting the new email address to ",(0,a.jsx)(n.code,{children:"newemail@example.com"}),". The return value will indicate whether the email change was successful."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var a=i(6540);const t={},r=a.createContext(t);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);