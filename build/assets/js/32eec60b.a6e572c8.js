"use strict";(self.webpackChunkdocs_orbvpn_com=self.webpackChunkdocs_orbvpn_com||[]).push([[979],{2993:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>o});var i=n(4848),s=n(8453);const a={},d=void 0,r={id:"api/user-tier/Update Task Setting",title:"Update Task Setting",description:"The functions described is accessible only to users with ADMIN privileges.",source:"@site/docs/api/user-tier/Update Task Setting.md",sourceDirName:"api/user-tier",slug:"/api/user-tier/Update Task Setting",permalink:"/docs/api/user-tier/Update Task Setting",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/user-tier/Update Task Setting.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Get User Tiers",permalink:"/docs/api/user-tier/Get User Tiers"},next:{title:"Update User Tier",permalink:"/docs/api/user-tier/Update User Tier"}},c={},o=[{value:"Mutation: <code>updateTaskSetting</code>",id:"mutation-updatetasksetting",level:3},{value:"Schema:",id:"schema",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"Example Mutation",id:"example-mutation",level:3},{value:"Return",id:"return-1",level:3}];function l(e){const t={admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"The functions described is accessible only to users with ADMIN privileges."})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"updateTaskSetting"})," mutation allows an admin to update an existing task setting in the system."]}),"\n",(0,i.jsxs)(t.h3,{id:"mutation-updatetasksetting",children:["Mutation: ",(0,i.jsx)(t.code,{children:"updateTaskSetting"})]}),"\n",(0,i.jsx)(t.h4,{id:"schema",children:"Schema:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"updateTaskSetting(\n  setting: TaskSettingInput!\n): TaskSetting\n"})}),"\n",(0,i.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"setting"})," (TaskSettingInput): The task setting to update. This field is mandatory and includes the following fields:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"verification"})," (Float!): The verification points associated with the task setting."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"wallet"})," ([WalletTaskInput]!): A list of wallet tasks associated with the task setting."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"auction"})," (Float!): The auction points associated with the task setting."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"direct"})," (Float!): The direct points associated with the task setting."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"staking"})," ([StakeTaskInput]!): A list of staking tasks associated with the task setting."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"return",children:"Return"}),"\n",(0,i.jsxs)(t.p,{children:["The mutation returns the updated ",(0,i.jsx)(t.code,{children:"TaskSetting"})," object if successful."]}),"\n",(0,i.jsx)(t.h3,{id:"example-mutation",children:"Example Mutation"}),"\n",(0,i.jsxs)(t.p,{children:["The following is an example of how to use the ",(0,i.jsx)(t.code,{children:"updateTaskSetting"})," mutation to update an existing task setting:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"mutation {\n  updateTaskSetting(\n    setting: {\n      verification: 15.0,\n      wallet: [\n        { amount: 200, point: 15.0 }\n      ],\n      auction: 7.0,\n      direct: 3.0,\n      staking: [\n        { expiredTime: 60, ratio: 2.0 }\n      ]\n    }\n  ) {\n    id,\n    verification,\n    wallet {\n      amount,\n      point\n    },\n    auction,\n    direct,\n    staking {\n      expiredTime,\n      ratio\n    }\n  }\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"return-1",children:"Return"}),"\n",(0,i.jsxs)(t.p,{children:["The example returns the updated ",(0,i.jsx)(t.code,{children:"TaskSetting"})," object with details such as ",(0,i.jsx)(t.code,{children:"id"}),", ",(0,i.jsx)(t.code,{children:"verification"}),", ",(0,i.jsx)(t.code,{children:"wallet"}),", ",(0,i.jsx)(t.code,{children:"auction"}),", ",(0,i.jsx)(t.code,{children:"direct"}),", and ",(0,i.jsx)(t.code,{children:"staking"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["In this example, the mutation updates an existing task setting with ",(0,i.jsx)(t.code,{children:"15.0"})," verification points, a wallet task for ",(0,i.jsx)(t.code,{children:"200"})," amount and ",(0,i.jsx)(t.code,{children:"15.0"})," points, ",(0,i.jsx)(t.code,{children:"7.0"})," auction points, ",(0,i.jsx)(t.code,{children:"3.0"})," direct points, and a staking task with ",(0,i.jsx)(t.code,{children:"60"})," expired time and ",(0,i.jsx)(t.code,{children:"2.0"})," ratio. The return value includes the details of the updated ",(0,i.jsx)(t.code,{children:"TaskSetting"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function d(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);